Performing C++ SOURCE FILE Test SDL2PP_WITH_EXPERIMENTAL_OPTIONAL failed with the following output:
Change Dir: /home/joaquin/Documents/Facultad/Taller/TP Final/SDL2PP/libSDL2pp-0.16.2/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_3fae2/fast && /usr/bin/make -f CMakeFiles/cmTC_3fae2.dir/build.make CMakeFiles/cmTC_3fae2.dir/build
make[1]: Entering directory '/home/joaquin/Documents/Facultad/Taller/TP Final/SDL2PP/libSDL2pp-0.16.2/CMakeFiles/CMakeTmp'
Building CXX object CMakeFiles/cmTC_3fae2.dir/src.cxx.o
/usr/bin/c++    -std=c++11 -DSDL2PP_WITH_EXPERIMENTAL_OPTIONAL   -o CMakeFiles/cmTC_3fae2.dir/src.cxx.o -c "/home/joaquin/Documents/Facultad/Taller/TP Final/SDL2PP/libSDL2pp-0.16.2/CMakeFiles/CMakeTmp/src.cxx"
/home/joaquin/Documents/Facultad/Taller/TP Final/SDL2PP/libSDL2pp-0.16.2/CMakeFiles/CMakeTmp/src.cxx: In function ‘int main()’:
/home/joaquin/Documents/Facultad/Taller/TP Final/SDL2PP/libSDL2pp-0.16.2/CMakeFiles/CMakeTmp/src.cxx:2:19: error: ‘std::experimental’ has not been declared
    2 | int main() { std::experimental::optional<int> o; return !o; }
      |                   ^~~~~~~~~~~~
/home/joaquin/Documents/Facultad/Taller/TP Final/SDL2PP/libSDL2pp-0.16.2/CMakeFiles/CMakeTmp/src.cxx:2:42: error: expected primary-expression before ‘int’
    2 | int main() { std::experimental::optional<int> o; return !o; }
      |                                          ^~~
/home/joaquin/Documents/Facultad/Taller/TP Final/SDL2PP/libSDL2pp-0.16.2/CMakeFiles/CMakeTmp/src.cxx:2:58: error: ‘o’ was not declared in this scope
    2 | int main() { std::experimental::optional<int> o; return !o; }
      |                                                          ^
make[1]: *** [CMakeFiles/cmTC_3fae2.dir/build.make:66: CMakeFiles/cmTC_3fae2.dir/src.cxx.o] Error 1
make[1]: Leaving directory '/home/joaquin/Documents/Facultad/Taller/TP Final/SDL2PP/libSDL2pp-0.16.2/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_3fae2/fast] Error 2


Source file was:
#include <experimental/optional>
int main() { std::experimental::optional<int> o; return !o; }
